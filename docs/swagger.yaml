definitions:
  dto.CategoriaDTO:
    properties:
      cor:
        type: string
      titulo:
        type: string
    required:
    - cor
    - titulo
    type: object
  dto.VideoDTO:
    properties:
      categoriaID:
        type: integer
      descricao:
        type: string
      titulo:
        type: string
      url:
        type: string
    required:
    - descricao
    - titulo
    - url
    type: object
  models.Categoria:
    properties:
      cor:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      titulo:
        type: string
      updatedAt:
        type: string
      video:
        $ref: '#/definitions/models.Video'
    required:
    - cor
    - titulo
    type: object
  models.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.UpdatePassword:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  models.UpdateUser:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.UserCreation:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Video:
    properties:
      categoriaID:
        type: integer
      createdAt:
        type: string
      descricao:
        type: string
      id:
        type: integer
      titulo:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    required:
    - descricao
    - titulo
    - url
    type: object
info:
  contact: {}
paths:
  /categorias:
    get:
      consumes:
      - application/json
      description: Lista todas as categorias
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Video'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Lista todas as categorias
      tags:
      - categorias
    post:
      consumes:
      - application/json
      description: Create categoria
      parameters:
      - description: Categoria
        in: body
        name: categoria
        required: true
        schema:
          $ref: '#/definitions/dto.CategoriaDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Categoria'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create categoria
      tags:
      - categorias
  /categorias/{id}:
    delete:
      consumes:
      - application/json
      description: Delete categoria
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete categoria
      tags:
      - categorias
    put:
      consumes:
      - application/json
      description: Update a categoria
      parameters:
      - description: ID da categoria
        in: path
        name: id
        required: true
        type: string
      - description: Dados da categoria
        in: body
        name: categoria
        required: true
        schema:
          $ref: '#/definitions/dto.CategoriaDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Categoria'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a categoria
      tags:
      - categorias
  /users:
    get:
      consumes:
      - application/json
      description: Show all users
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Show user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - users
  /users/{id}/password:
    patch:
      consumes:
      - application/json
      description: Update user password
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update user password
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login user
        in: body
        name: loginUser
        required: true
        schema:
          $ref: '#/definitions/models.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Login user
      tags:
      - users
  /videos:
    get:
      consumes:
      - application/json
      description: Show all videos
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Video'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show all videos
      tags:
      - videos
    post:
      consumes:
      - application/json
      description: Create a video
      parameters:
      - description: Video
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/dto.VideoDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.VideoDTO'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a video
      tags:
      - videos
  /videos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a video
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Video deleted successfully
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a video
      tags:
      - videos
    get:
      consumes:
      - application/json
      description: Show video
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Video'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Show video
      tags:
      - videos
    put:
      consumes:
      - application/json
      description: Update a video
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: string
      - description: Video data
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/dto.VideoDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Video'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a video
      tags:
      - videos
  /videos/free:
    get:
      consumes:
      - application/json
      description: Show all free videos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Video'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Show all free videos
      tags:
      - videos
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
